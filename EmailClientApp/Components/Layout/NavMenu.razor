@inject Microsoft.Extensions.Options.IOptions<Shared.Models.EmailConfiguration> EmailOptions

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">EmailClientApp</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        @if (IsCredentialsFilled)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="send-email">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Send Email
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="fetch-emails">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Fetch Emails
                </NavLink>
            </div>
        }

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="configure-email">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Email Configure
            </NavLink>
        </div>
    </nav>
</div>

@code {
    // Dynamically check if credentials are available
    private bool IsCredentialsFilled =>
        !string.IsNullOrEmpty(EmailOptions.Value.Email) &&
        !string.IsNullOrEmpty(EmailOptions.Value.Password);

    private string UserEmail => EmailOptions.Value.Email;
    private string UserPassword => EmailOptions.Value.Password;
}
